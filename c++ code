

class Solution {
public:   
    
   void dfs(vector<vector<int>>&adj, vector<int>&vis,int &count,int i){
       
    
          vis[i]=1;
          count++;
          
          
      for(auto x:adj[i]){
          
          if(vis[x]==0){
              dfs(adj,vis,count,x);
          } 
          
      }    
          
     return;     
          
       
   } 
    
    

    long long countPairs(int n, vector<vector<int>>& arr) {
        
        vector<vector<int>>adj(n);
      int p=arr.size();
            
        for(int i=0;i<p;i++){
            int u=arr[i][0];
            int v=arr[i][1];
            
          adj[u].push_back(v);
          adj[v].push_back(u);
        }
        
        
        vector<int>vis(n,0);
        vector<int>v;
        for(int i=0;i<n;i++){
            int count=0;
            if(vis[i]==0){
                dfs(adj,vis,count,i);
            }
                if(count!=0)v.push_back(count); 
                    
                
        }
        
       
        int k=v.size();
        long long ans=0;
        long long presum=0;
    for(int i=0;i<k;i++){
    ans=ans+v[i]*presum;
    presum+=v[i];
    }    

        
       
     return ans;   
        
    }
};
